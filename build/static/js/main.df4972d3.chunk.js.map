{"version":3,"sources":["components/Footer.jsx","components/Navbar.jsx","pages/Home.jsx","pages/About.jsx","App.js","serviceWorker.js","index.js"],"names":["Footer","react_default","a","createElement","className","Date","getFullYear","Component","Navbar","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Link","to","id","Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","items","item_2","isLoaded","_this2","fetch","then","res","json","setState","_this$state","components_Navbar","map","item","key","name","components_Footer","About","App","BrowserRouter","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.df4972d3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"footer\">\r\n        <div className=\"container\">\r\n          <span className=\"text-muted\">My Website &#169; {new Date().getFullYear()}</span>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-toggleable-md\">\r\n        <button className=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">React Website</Link>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item active\">\r\n                <Link className=\"nav-link\" to=\"/\">Home <span className=\"sr-only\">(current)</span></Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n              </li>\r\n             \r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\n//import { DataTable } from 'react';\nimport Footer from '../components/Footer.jsx';\nimport Navbar from '../components/Navbar.jsx';\nclass Home extends Component {\n\tconstructor(props) {\n        super(props);\n        this.state = {\n            items: [],\n\t\t\titem_2: [],\n            isLoaded: false\n        }\n    }\n    componentDidMount() {\n        fetch('http://localhost:8080/projects/api/select.php')\n            .then(res => res.json())\n            .then(json => {\n                this.setState({\n                    isLoaded: true,\n                    items: json\n                })\n            }).then(()=>{\n\t\t\t\tfetch('http://localhost:8080/projects/api/employee.php')\n            .then(res => res.json())\n            .then(json => {\n                this.setState({\n                    isLoaded: true,\n                    item_2: json\n                })\n            })\n\t\t\t\t\n\t\t\t});\n    }\n  render() {\n\t  var { isLoaded, items,item_2 } = this.state;\n        if (!isLoaded) {\n            return <div>Loading...</div>;\n        }\n    return (\n      <div>\n        <Navbar />\n        <ul>\n                    {items.map(item => (\n                        <li key=\"{item.id}\">\n                            Name: {item.name}\n                        </li>\n                    ))}\n                </ul>\n\t\t\t\t<ul>\n                    {item_2.map(item => (\n                        <li key=\"{item.id}\">\n                            Name: {item.name}\n                        </li>\n                    ))}\n                </ul>\n        <div className=\"container\">\n          <h2>Welcome</h2>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc placerat orci eu nulla sagittis, pulvinar dignissim lectus consequat. Etiam in lobortis ligula, vitae ornare lacus. Vivamus scelerisque lorem arcu, vitae eleifend ex commodo a. Quisque rutrum, augue sit amet egestas efficitur, magna nulla lacinia elit, sed suscipit tortor erat vitae enim. Donec egestas odio id aliquet rhoncus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Quisque mi dolor, egestas nec lacinia non, sodales eu lacus. Donec ultricies nec elit ac ornare. Quisque fermentum ligula ut feugiat cursus. Aliquam auctor suscipit ex a lacinia. Mauris sollicitudin, justo quis fringilla finibus, dui diam ullamcorper nulla, sit amet placerat justo neque quis quam. Praesent nec nibh at tortor ornare dignissim. Morbi tincidunt fringilla turpis at luctus. Vivamus dapibus ligula eget pellentesque luctus. Maecenas ut consectetur lacus, non dignissim nisi. Praesent sodales tellus sit amet faucibus tempus.\n          </p>\n          <p>\n            Maecenas dapibus, est posuere eleifend rutrum, lectus ligula gravida urna, at pretium dui turpis non lorem. Donec pretium lorem ipsum, at fermentum nibh consequat facilisis. Sed maximus massa est, vel porta diam placerat id. Vivamus imperdiet lorem eget dolor bibendum, eget gravida tellus interdum. Sed lectus odio, condimentum eu porttitor vel, euismod sit amet urna. Nam quis dui a nibh rhoncus aliquam vitae in metus. Nam sit amet semper turpis. Suspendisse eu malesuada tortor, vel lacinia nisl. Phasellus ultrices vehicula magna, sed tempor neque dapibus quis. Phasellus urna justo, sollicitudin ac odio eget, convallis varius nulla. Vivamus in lacinia lorem, at eleifend nulla. Nulla nec luctus purus. Integer id purus mauris. Phasellus finibus ultricies erat a tempus. Nulla luctus sem nec justo venenatis, eu faucibus purus congue.\n          </p>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport Footer from '../components/Footer.jsx';\nimport Navbar from '../components/Navbar.jsx';\nclass About extends Component {\n  render() {\n    return (\n      <div>\n        <Navbar />\n        \n        <div className=\"container\">\n          <h2>About</h2>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc placerat orci eu nulla sagittis, pulvinar dignissim lectus consequat. Etiam in lobortis ligula, vitae ornare lacus. Vivamus scelerisque lorem arcu, vitae eleifend ex commodo a. Quisque rutrum, augue sit amet egestas efficitur, magna nulla lacinia elit, sed suscipit tortor erat vitae enim. Donec egestas odio id aliquet rhoncus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Quisque mi dolor, egestas nec lacinia non, sodales eu lacus. Donec ultricies nec elit ac ornare. Quisque fermentum ligula ut feugiat cursus. Aliquam auctor suscipit ex a lacinia. Mauris sollicitudin, justo quis fringilla finibus, dui diam ullamcorper nulla, sit amet placerat justo neque quis quam. Praesent nec nibh at tortor ornare dignissim. Morbi tincidunt fringilla turpis at luctus. Vivamus dapibus ligula eget pellentesque luctus. Maecenas ut consectetur lacus, non dignissim nisi. Praesent sodales tellus sit amet faucibus tempus.\n          </p>\n          <p>\n            Maecenas dapibus, est posuere eleifend rutrum, lectus ligula gravida urna, at pretium dui turpis non lorem. Donec pretium lorem ipsum, at fermentum nibh consequat facilisis. Sed maximus massa est, vel porta diam placerat id. Vivamus imperdiet lorem eget dolor bibendum, eget gravida tellus interdum. Sed lectus odio, condimentum eu porttitor vel, euismod sit amet urna. Nam quis dui a nibh rhoncus aliquam vitae in metus. Nam sit amet semper turpis. Suspendisse eu malesuada tortor, vel lacinia nisl. Phasellus ultrices vehicula magna, sed tempor neque dapibus quis. Phasellus urna justo, sollicitudin ac odio eget, convallis varius nulla. Vivamus in lacinia lorem, at eleifend nulla. Nulla nec luctus purus. Integer id purus mauris. Phasellus finibus ultricies erat a tempus. Nulla luctus sem nec justo venenatis, eu faucibus purus congue.\n          </p>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport './App.css';\nimport Home from './pages/Home.jsx';\nimport About from './pages/About.jsx';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Route exact path=\"/\" component={Home}/>\n          <Route path=\"/about\" component={About}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}